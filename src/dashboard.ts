import { Scenes, Composer, Markup } from 'telegraf'
import { MyContext } from './types/MyContext'
import sendOrEditMessage from './utils/sendOrEditMessage'
import { fetchUser } from './utils/fetchUser'
import { savePhoneNumber } from './utils/savePhoneNumber'
import logger from './utils/logger'
import { fetchUserReferralInfo } from './utils/fetchUserReferralInfo'

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏
const dashboardButtons = Markup.inlineKeyboard([
    [Markup.button.callback('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ', 'about')],
    // [Markup.button.callback("–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ", "home")],
    [Markup.button.callback('–°–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', 'home')],
    [Markup.button.callback('üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å –Ω–∞–º–∏', 'refferal')],
    [
        Markup.button.callback('–ù–∞–∑–∞–¥', 'back'),
        Markup.button.url('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'https://t.me/frntdev'), // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    ],
])
// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
const referralButtons = Markup.inlineKeyboard([
    [Markup.button.callback('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'stats')],
    [Markup.button.callback('–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', 'withdraw')],
    // [Markup.button.callback('üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å –Ω–∞–º–∏', 'refferal')],
    [
        Markup.button.callback('–ù–∞–∑–∞–¥', 'back-to-dashboard'),
        Markup.button.url('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'https://t.me/frntdev'), // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    ],
])
// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–µ–∫—Ü–∏–∏ –û –ø—Ä–æ–µ–∫—Ç–µ
const aboutButtons = Markup.inlineKeyboard([
    [
        Markup.button.callback('–ù–∞–∑–∞–¥', 'back-to-dashboard'),
        Markup.button.url('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'https://t.me/frntdev'), // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    ],
])
// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–µ–∫—Ü–∏–∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
const withdrawButtons = Markup.inlineKeyboard([
    [{ text: "–ø–æ —Å–∏—Å—Ç–µ–º–µ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π", callback_data: "withdraw_to_spb" }],
    [{ text: "–ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", callback_data: "withdraw_to_cart" }],
    [{ text: "telegram stars", callback_data: "withdraw_to_stars" }],
    [{ text: "–∫–æ—à–µ–ª–µ–∫ TON", callback_data: "withdraw_to_ton" }],
    [
        Markup.button.callback('–ù–∞–∑–∞–¥', 'back-to-refferal'),
        Markup.button.url('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'https://t.me/frntdev'), // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    ],
])

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const requestPhoneNumber = async (ctx: MyContext) => {
    const callbackQuery = (ctx.update as any).callback_query
    const messageId = callbackQuery?.message?.message_id
    if (messageId) {
        await ctx.deleteMessage(messageId)
    }

    await ctx.reply(
        '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.',
        Markup.keyboard([
            [Markup.button.contactRequest('üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')],
        ])
            .oneTime() // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—á–µ–∑–Ω–µ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            .resize() // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥–æ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    )
}

const stepHandler = new Composer<MyContext>()
stepHandler.action('back', async (ctx) => {
    // Markup.removeKeyboard()
    // ctx.reply('–ø—Ä–∏–≤–µ—Ç', { reply_markup: { remove_keyboard: true } })
    ctx.scene.enter('home')
})

stepHandler.action(`about`, async (ctx) => {
    await generateAboutSection(ctx)
    ctx.answerCbQuery('about')
})

async function generateAboutSection(ctx: MyContext) {
    let message = `<b>–û –ø—Ä–æ–µ–∫—Ç–µ</b>\n\n`
    message += `–≠—Ç–æ—Ç —è–∑—ã–∫–æ–≤–æ–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ –ë—É—Ä—è—Ç—Å–∫–æ–≥–æ –ø—Ä–æ—Å—Ç—ã–º, —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.`
    message += `\n\n–ó–¥–µ—Å—å —Ç–µ–±—è –∂–¥—É—Ç: \n<i>‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∞–º–æ—É—á–∏—Ç–µ–ª—å, \n‚Äî —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–π —è–∑—ã–∫–æ–≤–æ–π –∫–æ—Ä–ø—É—Å, \n‚Äî —É–¥–æ–±–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, \n ‚Äî –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, \n ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã.</i> \n\n`
    message += `<i>p.s. 06.03.2025 –ü—Ä–æ–µ–∫—Ç –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–æ—Å–∏–º –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞.</i>\n@bur_live`
    await sendOrEditMessage(ctx, message, aboutButtons)
    ctx.wizard.selectStep(2)
}
async function generateWithdrawSection(ctx: MyContext) {
    let message = `<b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n`
    message += `–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤\n`
    await sendOrEditMessage(ctx, message, withdrawButtons)
    ctx.wizard.selectStep(3)
}

async function generateRefferalSection(ctx: MyContext) {
    const userId = ctx.from?.id
    if (!userId) throw Error

    const referralInfo = await fetchUserReferralInfo(userId)

    let message = `<b>üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n`
    message += `–ü—Ä–∏–≥–ª–∞—à–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–Ω—É—Å—ã!\n`
    message += `–°—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –ø–æ–ª—É—á–∞–π –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É.\n\n`
    message += `<b>–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n<code>${referralInfo.referralLink}</code>\n\n`
    message += `<b>–í–∞—à —É—Ä–æ–≤–µ–Ω—å: 174.5 —Ä—É–± –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞—Ç–Ω–æ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞</b>\n`
    message += `<b>–ë–∞–ª–∞–Ω—Å:</b> ${referralInfo.earnedBonus} —Ä—É–±.\n`
    message += `<b>–ü—Ä–∏–≤–ª–µ—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> ${referralInfo.referralsCount}\n`
    message += `<b>–û—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:</b> ${referralInfo.subscribedReferralsCount}\n`
    message += `<b>–ö–æ–Ω–≤–µ—Ä—Å–∏—è:</b> ${
        referralInfo.referralsCount > 0
            ? Math.round(
                  (referralInfo.subscribedReferralsCount /
                      referralInfo.referralsCount) *
                      100
              )
            : 0
    }%`

    await sendOrEditMessage(ctx, message, referralButtons)
    ctx.wizard.selectStep(1)
}
stepHandler.action(`refferal`, async (ctx) => await generateRefferalSection(ctx))

// stepHandler.action(/^.*$/, async (ctx: MyContext) => {
//     ctx.wizard.selectStep(2)
//     ctx.answerCbQuery()
// })

stepHandler.on('message', async (ctx) => {
    await dashboardGreeting(ctx)
})

// –°—Ü–µ–Ω–∞ "–ü–æ–¥–ø–∏—Å–∫–∞"
const dashboardWizard = new Scenes.WizardScene(
    'dashboard-wizard',
    stepHandler,

    // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—ã–≤–æ–¥ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async (ctx: MyContext) => {
        if (ctx.updateType === 'message') {
            // logger.info(`step 1`)
            ctx.wizard.selectStep(0)
            await dashboardGreeting(ctx)
        } else if (ctx.updateType === 'callback_query') {
            const data: 'back-to-dashboard' | 'stats' | 'withdraw' =
                ctx.update.callback_query.data

            if (data === 'back-to-dashboard') {
                ctx.wizard.selectStep(0)
                await dashboardGreeting(ctx)
            }

            if (data === 'withdraw') {
                await generateWithdrawSection(ctx)
            }

            if (data === 'stats') {
                ctx.answerCbQuery()
            }
        }
    },

    async (ctx: MyContext) => {
        if (ctx.updateType === 'message') {
            await generateAboutSection(ctx)
        } else if (ctx.updateType === 'callback_query') {
            const data: 'back-to-dashboard' = ctx.update.callback_query.data

            if (data === 'back-to-dashboard') {
                ctx.wizard.selectStep(0)
                await dashboardGreeting(ctx)
            }

            ctx.answerCbQuery()
        }
    },
    
    async (ctx: MyContext) => {
        if (ctx.updateType === "message") {
            await generateWithdrawSection(ctx)
        } else if (ctx.updateType === 'callback_query') {
            const data: 'back-to-refferal' = ctx.update.callback_query.data

            if (data === 'back-to-refferal') {
                return await generateRefferalSection(ctx)
            }

            ctx.answerCbQuery()

        }
    }
)

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–ø–∏—Å–∫–µ
async function dashboardGreeting(ctx: MyContext, reply?: boolean) {
    try {
        const userId = ctx.from?.id
        if (!userId) throw Error

        const response = await fetchUser(userId)
        const isActive = response.user.subscription.isActive
        const createdDate = new Date(response.user.createdAt)
        // const greetingMessage = `<b>üíé –ü—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø</b>\n\n–°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —Å–æ–æ–±—â–µ—Å—Ç–≤–∞\n–ü—Ä–µ–º–∏—É–º-–¥–æ—Å—Ç—É–ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—É—Ä—è—Ç—Å–∫–∏–π —è–∑—ã–∫.\n\n<b>–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –ü—Ä–µ–º–∏—É–º?</b>\n\n<strong><i>+ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</i></strong>\n<strong><i>+ –£—Å–∫–æ—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å</i></strong>\n<strong><i>+ –ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã</i></strong>\n<strong><i>+ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –Ω–∞–≥—Ä–∞–¥—ã</i></strong>\n<strong><i>+ –î–æ—Å—Ç—É–ø –∫ —Å–ª–æ–≤–∞—Ä—é</i></strong>\n<strong><i>+ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</i></strong>`
        let greetingMessage = `<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n`
        greetingMessage += `<b>ID:</b> <code>${response.user.id}</code>\n`
        greetingMessage += `<b>–†–µ–π—Ç–∏–Ω–≥:</b> <code>${response.user.rating}</code>\n`
        greetingMessage += `<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code><b>${createdDate.toLocaleDateString('ru-Ru')}</b></code>\n`
        // throw error
        await sendOrEditMessage(ctx, greetingMessage, dashboardButtons, reply)
    } catch (error) {
        const message = `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ, –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å @frntdev`
        await sendOrEditMessage(
            ctx,
            message,
            Markup.inlineKeyboard([[Markup.button.callback('–ù–∞–∑–∞–¥', 'back')]]),
            reply
        )
        // ctx.scene.enter("home")
    }
}

dashboardWizard.on('contact', async (ctx: any) => {
    if (ctx.update) {
        if (ctx.update.message.contact) {
            const contact: {
                phone_number: string
                first_name: string
                user_id: number
            } = ctx.update.message.contact

            const request = await savePhoneNumber(
                contact.user_id,
                contact.phone_number
            )
            ctx.reply(request.message, {
                reply_markup: { remove_keyboard: true },
            })
            await dashboardGreeting(ctx, true)
        }
    }
})

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É "–ü–æ–¥–ø–∏—Å–∫–∞"
dashboardWizard.enter(async (ctx: MyContext) => {
    await dashboardGreeting(ctx)
})

export default dashboardWizard
